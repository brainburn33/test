name: GitHub-RDP with Cache

on:
  workflow_dispatch:

permissions:
  actions: write
  contents: read

jobs:
  rdp-test:
    runs-on: windows-latest
    timeout-minutes: 60

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup cache key
        id: cache-key
        shell: powershell
        run: |
          $date = Get-Date -Format "yyyy-MM-dd"
          echo "cache_key=rdp-data-$date" >> $env:GITHUB_OUTPUT
          Write-Host "Cache key: rdp-data-$date"

      - name: Restore cache
        id: cache-restore
        uses: actions/cache@v3
        with:
          path: ./cached-data
          key: ${{ steps.cache-key.outputs.cache_key }}
          restore-keys: |
            rdp-data-

      - name: Process cached data
        shell: powershell
        run: |
          $dataDir = "./data"
          New-Item -ItemType Directory -Force -Path $dataDir
          
          # Восстанавливаем данные из кеша
          $counter = 1
          if (Test-Path "./cached-data/counter.txt") {
            $counter = [int](Get-Content "./cached-data/counter.txt") + 1
            Write-Host "Restored counter: $($counter - 1), incrementing to: $counter"
          } else {
            Write-Host "Starting fresh with counter: 1"
          }
          
          Set-Content -Path "$dataDir/counter.txt" -Value $counter
          
          # Добавляем запись в историю
          $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
          $historyEntry = "Run #$counter at $timestamp (ID: ${{ github.run_id }})"
          
          if (Test-Path "./cached-data/history.txt") {
            Copy-Item "./cached-data/history.txt" "$dataDir/history.txt"
            Add-Content -Path "$dataDir/history.txt" -Value $historyEntry
          } else {
            Set-Content -Path "$dataDir/history.txt" -Value $historyEntry
          }
          
          Write-Host "`nCurrent run: $counter"
          Write-Host "`nHistory:"
          Get-Content "$dataDir/history.txt"

      - name: Save to cache
        shell: powershell
        run: |
          # Копируем данные для кеширования
          if (Test-Path "./data") {
            Remove-Item -Path "./cached-data" -Recurse -Force -ErrorAction SilentlyContinue
            Copy-Item -Path "./data" -Destination "./cached-data" -Recurse
            Write-Host "Data prepared for caching"
          }

      - name: Check if should restart
        id: check_restart
        shell: powershell
        run: |
          $maxRuns = 5
          $counter = [int](Get-Content "./data/counter.txt")
          
          if ($counter -lt $maxRuns) {
            Write-Host "Will restart (run $counter of $maxRuns)"
            echo "should_restart=true" >> $env:GITHUB_OUTPUT
          } else {
            Write-Host "Max runs reached ($maxRuns)"
            echo "should_restart=false" >> $env:GITHUB_OUTPUT
          }

      - name: Upload final artifact
        uses: actions/upload-artifact@v4
        with:
          name: final-data-${{ github.run_id }}
          path: ./data/
          retention-days: 7

      - name: Restart workflow
        if: steps.check_restart.outputs.should_restart == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          Start-Sleep -Seconds 5
          gh workflow run "${{ github.workflow }}" --ref "${{ github.ref_name }}"
